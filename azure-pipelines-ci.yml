trigger: none

pool:
  name: "linuxpool"

stages:

- stage: Build
  displayName: Build
  jobs:

  - job: Restore
    displayName: Restore
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: restore
        projects: "**/*.csproj"

  - job: Build
    displayName: Build
    dependsOn: Restore
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: "build"
        projects: "**/*.csproj"
        arguments: "--configuration Release"

- stage: Publish
  displayName: Publish
  jobs:

  - job: Publish
    displayName: Publish
    steps:

    - script: |
        echo "Fetching the latest Git tag..."
        git fetch --tags
        export TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "##vso[task.setvariable variable=GIT_TAG]$TAG"
      displayName: "Retrieve Git Tag"
      name: RetrieveGitTag

    - script: |
        echo "Updating GIT_TAG in git-variable-group"
        
        # Log in to Azure DevOps using SYSTEM_ACCESSTOKEN
        echo "Logging into Azure DevOps..."
        az devops login --token $(System.AccessToken)
        
        # Now update the variable in the variable group
        az pipelines variable-group variable update \
          --org https://dev.azure.com/pavanrocky \
          --project iis-deployment \
          --group-id a699c1e7-88a7-600e-92f0-d00a2d4f1052 \
          --name GIT_TAG \
          --value $(GIT_TAG)
      displayName: "Update GIT_TAG in Variable Group"
      env:
        SYSTEM_ACCESSTOKEN: $(System.AccessToken)
    - task: DotNetCoreCLI@2
      inputs:
        command: "publish"
        projects: "**/*.csproj"
        arguments: "--configuration Release --output $(Build.ArtifactStagingDirectory)"
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: "$(Build.ArtifactStagingDirectory)"
        ArtifactName: "app-$(GIT_TAG)"

     # Update the GIT_TAG in the Variable Group
    - script: |
        echo "##vso[task.setvariable variable=GIT_TAG;isOutput=true]$(GIT_TAG)"
        echo "##vso[task.setvariable variable=GIT_TAG;isSecret=true]$(GIT_TAG)"
      displayName: "Set GIT_TAG in Variable Group"
      name: SetVariableInGroup
      condition: succeeded()
      